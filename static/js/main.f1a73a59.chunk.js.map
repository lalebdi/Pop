{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","inludeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRepost","rePoster","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","includeFullName","content","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","required","ref","TweetsComponent","setNewTweets","canCreate","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetsFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.f1a73a59.chunk.js","sourcesContent":["// import React from 'react';\n\nfunction getCookie(name) { // <- Copied from Django documention\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nexport function backendLookup(method, endpoint, callback, data){\n    let jsonData;\n    if(data){\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n    const url = `http://127.0.0.1:8000/api${endpoint}`\n    // const responseType = \"json\"\n\n    xhr.responseType = \"json\"\n    var csrftoken = getCookie('csrftoken');    \n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    if(csrftoken){\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken) // <- from the django documentation on AJAX. Could use a JWT token\n    }\n    xhr.onload = function(){\n        if (xhr.status === 403) {\n            const detail = xhr.response.detail\n            if (detail === \"Authentication credentials were not provided.\") {\n                if ((window.location.href.indexOf(\"login\")) === -1) {\n                    window.location.href = \"/login?showLoginRequired=true\"\n                }\n            }\n        }\n    callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function(e) {\n    console.log(\"error\", e)\n    callback({\"message\": \"The request encoutered an error\"}, 400)\n    }\n    // console.log(jsonData)\n    xhr.send(jsonData)\n}\n\n\n","import { backendLookup } from '../lookup';\n\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action};\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId ,callback){\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\n\nexport function apiTweetFeed(callback, nextUrl){\n    let endpoint = \"/tweets/feed/\"\n\n    if(nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\") // to be replaced in production to another endpoint\n    }\n\n    backendLookup(\"GET\", endpoint, callback)\n}\n\n\nexport function apiTweetList(username ,callback, nextUrl){\n    let endpoint = \"/tweets/\"\n    if(username){\n        endpoint = `/tweets/?username=${username}`\n    }\n    if(nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\") // to be replaced in production to another endpoint\n    }\n\n    backendLookup(\"GET\", endpoint, callback)\n    // const xhr = new XMLHttpRequest()\n    // const method = 'GET'\n    // const url = 'http://127.0.0.1:8000/api/tweets/'\n    // const responseType = \"json\"\n\n    // xhr.responseType = responseType\n    // xhr.open(method, url)\n    // xhr.onload = function(){\n    // callback(xhr.response, xhr.status)\n    // }\n    // xhr.onerror = function(e) {\n    // console.log(e)\n    // callback({\"message\": \"The request encoutered an error\"}, 400)\n    // }\n    // xhr.send()\n\n}","\nimport React from 'react';\nimport { apiTweetAction } from './lookup'\n\n\nexport function ActionBtn(props){\n    const {tweet, action, didPerformAction } = props;\n    const likes =  tweet.likes ? tweet.likes : 0\n    // const [likes, setLikes] = useState( tweet.likes ? tweet.likes : 0);\n    // const [userLiked, setUserLiked] = useState(tweet.userLiked === true ? true : false);\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    // const display = action.type === 'like' ? `${ tweet.likes } ${actionDisplay}` : actionDisplay\n    const handleActionBackendEvent = (response, status) =>{\n        // console.log(response)\n        // console.log(status)\n        if ((status === 200 || status === 201) && didPerformAction ) {\n            // setLikes(response.likes)\n            didPerformAction(response, status)\n            // setUserLiked(true)\n        }\n        // if (action.type === 'like'){ //console.log(tweet.likes+1)\n        //     if (userLiked === true){ // the user unliked \n        //         setLikes(likes - 1)\n        //         setUserLiked(false)\n        //     } else {\n        //         setLikes(likes + 1)\n        //         setUserLiked(true)    \n        //     }\n        // }\n\n    }\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n        \n    }\n    const display = action.type === 'like' ? `${ likes } ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}> {display} </button>\n}","\nimport React from 'react';\n\n\n\nexport function UserLink(props){\n    const { username } = props\n\n    const handleUserLink = (event) => {\n        window.location.href = `/profiles/${username}`\n    }\n    return <span className=\"pointer\" onClick={handleUserLink}>\n            {props.children}\n        </span>\n}\n\n\nexport function UserDisplay(props){\n    const {user, inludeFullName} = props\n    const nameDisplay = inludeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n\n    return <React.Fragment>\n            {nameDisplay}\n            <UserLink username={user.username} >@{user.username}</UserLink>\n        </React.Fragment>\n}\n\n\nexport function UserPicture(props){\n    const { user } = props\n\n    return <UserLink username={user.username} >\n            <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\n            {user.username[0]}\n            </span>\n            </UserLink>\n}\n","\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons'\nimport { UserDisplay, UserPicture } from '../profiles'\n\n\nexport function ParentTweet(props){\n    const { tweet } = props\n    return tweet.parent ? <Tweet isRepost rePoster={props.rePoster} hideActions className={\" \"} tweet={tweet.parent} /> : null\n}\n\nexport function Tweet(props){\n    const { tweet, didRetweet, hideActions, isRepost, rePoster } = props\n    const [ actionTweet, setActionTweet ] = useState(props.tweet ? props.tweet : null);\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    className = isRepost === true ? `${className} p-2 border rounded` : className\n\n    const path = window.location.pathname;\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n        } else if(status === 201){\n            if(didRetweet){\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n\n    return <div className={className}>\n        {isRepost === true && <div className=\"mb-2\"><span className='small text-muted'>Reposted from <UserDisplay user={rePoster}/></span></div>}\n        <div className='d-flex'>\n            <div className=''>\n            <UserPicture user={tweet.user} />\n            </div>\n            <div className=\"col-11\">\n                <div>\n                    <p>\n                        <UserDisplay includeFullName user={tweet.user} />\n                    </p>\n                    <p>{tweet.content}</p>\n                        <ParentTweet tweet={tweet} rePoster={tweet.user} />\n                </div>\n                <div className='btn btn-group px-0'>\n                {(actionTweet && hideActions !== true) && \n                    <React.Fragment>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\" }}/>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\" }}/>\n                    </React.Fragment>\n                }\n                    {isDetail === true ? null : <button className=\"btn btn-outline-primary btn-sm\" onClick={handleLink} >View</button>}\n                    </div>\n                    </div>\n        </div>\n    </div>\n}\n","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup';\nimport { Tweet } from './detail';\n\n\nexport function TweetList(props){\n    const [ tweetsInit, setTweetsInit ] = useState([]);\n    const [ tweets, setTweets ] = useState([]);\n    const [ nextUrl, setNextUrl ] = useState(null);\n    const [ tweetsDidSet, setTweetsDidSet ] = useState(false);\n    // console.log(props.newTweets)\n    useEffect(() =>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if(final.length !== tweets.length){\n        setTweets(final)\n        }\n    }, [props.newTweets , tweets, tweetsInit])\n\n    useEffect(() => {\n        if(tweetsDidSet === false){\n    const handleTweetListLookup = (response, status) =>{\n        // console.log(response, status)\n        if (status === 200){\n        setNextUrl(response.next)\n        setTweetsInit(response.results)\n        setTweetsDidSet(true);\n        } else {\n            alert(\"There was an error 🤦🏼‍♀️\")\n        }\n    }\n    apiTweetList(props.username, handleTweetListLookup) // props.username must be passed as a dependecy below to fix the useEffect hook warning\n}\n    }, [tweetsInit, tweetsDidSet , setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet);\n        setTweetsInit(updateTweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets);\n        setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        if(nextUrl !== null){\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200){\n                    setNextUrl(response.next)\n                    const newTweets = [...tweets].concat(response.results)\n                    setTweetsInit(newTweets)\n                    setTweets(newTweets)\n                    // setTweetsDidSet(true);\n                    } else {\n                        alert(\"There was an error 🤦🏼‍♀️\")\n                    }\n            }\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n    return <Tweet tweet={item} key={`${index}-{item.id}`} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark'/>\n    })}\n    { nextUrl !== null && <button className=\"btn btn-outline-primary\" onClick={handleLoadNext}>See More</button>}\n    </React.Fragment>\n    };","import React, { useEffect, useState } from 'react';\nimport { apiTweetFeed } from './lookup';\nimport { Tweet } from './detail';\n\n\nexport function FeedList(props){\n    const [ tweetsInit, setTweetsInit ] = useState([]);\n    const [ tweets, setTweets ] = useState([]);\n    const [ nextUrl, setNextUrl ] = useState(null);\n    const [ tweetsDidSet, setTweetsDidSet ] = useState(false);\n\n    useEffect(() =>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if(final.length !== tweets.length){\n        setTweets(final)\n        }\n    }, [props.newTweets , tweets, tweetsInit])\n\n    useEffect(() => {\n        if(tweetsDidSet === false){\n    const handleTweetListLookup = (response, status) =>{\n    \n        if (status === 200){\n        setNextUrl(response.next)\n        setTweetsInit(response.results)\n        setTweetsDidSet(true);\n        }\n    }\n    apiTweetFeed( handleTweetListLookup) // props.username must be passed as a dependecy below to fix the useEffect hook warning\n}\n    }, [tweetsInit, tweetsDidSet , setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet);\n        setTweetsInit(updateTweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets);\n        setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        if(nextUrl !== null){\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200){\n                    setNextUrl(response.next)\n                    const newTweets = [...tweets].concat(response.results)\n                    setTweetsInit(newTweets)\n                    setTweets(newTweets)\n                    // setTweetsDidSet(true);\n                    } \n            }\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n    return <Tweet tweet={item} key={`${index}-{item.id}`} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark'/>\n    })}\n    { nextUrl !== null && <button className=\"btn btn-outline-primary\" onClick={handleLoadNext}>See More</button>}\n    </React.Fragment>\n    };","import React from 'react';\nimport { apiTweetCreate } from './lookup'\n\n\nexport function TweetCreate(props){\n    const textAreaRef = React.createRef()\n    const { didTweet } = props;\n\n    const handleBackendUpdate = (response, status) => {\n            if(status === 201){\n            didTweet(response)\n        } else {\n            console.log(response)\n            alert(\"An error occured 😢 please try again later\")\n        }\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const newVal = textAreaRef.current.value\n\n    \n        apiTweetCreate(newVal, handleBackendUpdate) \n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n                <textarea className=\"form-control\" name='tweet' required={true} ref={textAreaRef}>\n                \n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { TweetList } from './list'\nimport { FeedList } from './feed'\nimport { TweetCreate } from './create'\nimport { apiTweetDetail } from './lookup'\nimport { Tweet } from './detail'\n\n\nexport function FeedComponent(props){\n    const [ newTweets, setNewTweets ] = useState([]) \n\n    const canCreate = props.canCreate === \"false\" ? false : true;\n\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets];\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets) // setting the new state\n    }\n\n    return <div className={props.className}>\n        {canCreate === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />\n\n        }\n        <FeedList newTweets={newTweets} {...props} /> \n    </div>\n}\n\n\nexport function TweetsComponent(props){\n    const [ newTweets, setNewTweets ] = useState([]) \n\n    const canCreate = props.canCreate === \"false\" ? false : true;\n    // console.log(canCreate === true)\n    // console.log(canCreate === false)\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets];\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets) // setting the new state\n    }\n\n    return <div className={props.className}>\n        {canCreate === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />\n\n        }\n        <TweetList newTweets={newTweets} {...props} /> \n    </div>\n}\n    \n\nexport function TweetDetailComponent (props) {\n    const { tweetId } = props\n    const [didLookup, setDidLookup] = useState(false);\n    const [tweet, setTweet] = useState(null)\n\n    const handleBackendLookup = (response, status) =>{\n        if(status === 200){\n            setTweet(response)\n        } else {\n            alert(\"There was an error finding your tweet 😢 \")\n        }\n    }\n    useEffect(()=>{\n        if(didLookup === false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n\n    }, [tweetId, didLookup, setDidLookup]) \n \n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport { TweetsComponent } from './tweets'\n\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from './tweets';  \nimport reportWebVitals from './reportWebVitals';\n\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  appEl\n  );\n}\nconst e = React.createElement;\nconst tweetsEl = document.getElementById('pop')\nif(tweetsEl){\n  // console.log(tweetsEl.dataset)\n  ReactDOM.render(\n    // <React.StrictMode>\n    e(TweetsComponent, tweetsEl.dataset),tweetsEl\n    // </React.StrictMode>\n  );\n}\n\nconst tweetsFeedEl = document.getElementById('pop-feed')\nif(tweetsFeedEl){\n  // console.log(tweetsEl.dataset)\n  ReactDOM.render(\n    // <React.StrictMode>\n    e(FeedComponent, tweetsFeedEl.dataset),tweetsFeedEl\n    // </React.StrictMode>\n  );\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".pop-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container\n  )\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}