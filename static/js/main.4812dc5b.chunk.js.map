{"version":3,"sources":["lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","required","ref","TweetsComponent","setNewTweets","canCreate","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.4812dc5b.chunk.js","sourcesContent":["// import React from 'react';\n\nfunction getCookie(name) { // <- Copied from Django documention\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nexport function backendLookup(method, endpoint, callback, data){\n    let jsonData;\n    if(data){\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n    const url = `http://127.0.0.1:8000/api${endpoint}`\n    // const responseType = \"json\"\n\n    xhr.responseType = \"json\"\n    var csrftoken = getCookie('csrftoken');    \n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    if(csrftoken){\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken) // <- from the django documentation on AJAX. Could use a JWT token\n    }\n    xhr.onload = function(){\n        if (xhr.status === 403) {\n            const detail = xhr.response.detail\n            if (detail === \"Authentication credentials were not provided.\") {\n                window.location.href = \"/login?showLoginRequired=true\"\n            }\n        }\n    callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function(e) {\n    console.log(\"error\", e)\n    callback({\"message\": \"The request encoutered an error\"}, 400)\n    }\n    // console.log(jsonData)\n    xhr.send(jsonData)\n}\n\n\n","\nimport React from 'react';\nimport { apiTweetAction } from './lookup'\n\n\nexport function ActionBtn(props){\n    const {tweet, action, didPerformAction } = props;\n    const likes =  tweet.likes ? tweet.likes : 0\n    // const [likes, setLikes] = useState( tweet.likes ? tweet.likes : 0);\n    // const [userLiked, setUserLiked] = useState(tweet.userLiked === true ? true : false);\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    // const display = action.type === 'like' ? `${ tweet.likes } ${actionDisplay}` : actionDisplay\n    const handleActionBackendEvent = (response, status) =>{\n        // console.log(response)\n        // console.log(status)\n        if ((status === 200 || status === 201) && didPerformAction ) {\n            // setLikes(response.likes)\n            didPerformAction(response, status)\n            // setUserLiked(true)\n        }\n        // if (action.type === 'like'){ //console.log(tweet.likes+1)\n        //     if (userLiked === true){ // the user unliked \n        //         setLikes(likes - 1)\n        //         setUserLiked(false)\n        //     } else {\n        //         setLikes(likes + 1)\n        //         setUserLiked(true)    \n        //     }\n        // }\n\n    }\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n        \n    }\n    const display = action.type === 'like' ? `${ likes } ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}> {display} </button>\n}","import { backendLookup } from '../lookup';\n\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action};\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId ,callback){\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetList(username ,callback){\n    let endpoint = \"/tweets/\"\n    if(username){\n        endpoint = `/tweets/?username=${username}`\n    }\n\n    backendLookup(\"GET\", endpoint, callback)\n    // const xhr = new XMLHttpRequest()\n    // const method = 'GET'\n    // const url = 'http://127.0.0.1:8000/api/tweets/'\n    // const responseType = \"json\"\n\n    // xhr.responseType = responseType\n    // xhr.open(method, url)\n    // xhr.onload = function(){\n    // callback(xhr.response, xhr.status)\n    // }\n    // xhr.onerror = function(e) {\n    // console.log(e)\n    // callback({\"message\": \"The request encoutered an error\"}, 400)\n    // }\n    // xhr.send()\n\n}","\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons'\n\n\nexport function ParentTweet(props){\n    const { tweet } = props\n    return tweet.parent ? <div className=\"row\">\n            <div className=\"col-11 mx-auto p-3 border rounded\">\n            <p className=\"mb-0 text-muted small\">Repost</p> \n            <Tweet hideActions className={\" \"} tweet={tweet.parent}/>\n            </div>\n        </div> : null\n}\n\nexport function Tweet(props){\n    const { tweet, didRetweet, hideActions } = props\n    const [ actionTweet, setActionTweet ] = useState(props.tweet ? props.tweet : null);\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n\n    const path = window.location.pathname;\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n        } else if(status === 201){\n            if(didRetweet){\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n\n    return <div className={className}>\n            <div>\n                <p>{tweet.id} - {tweet.content}</p>\n                    <ParentTweet tweet={tweet} />\n            </div>\n            <div className='btn btn-group'>\n            {(actionTweet && hideActions !== true) && \n                <React.Fragment>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\" }}/>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\" }}/>\n                </React.Fragment>\n            }\n                {isDetail === true ? null : <button className=\"btn btn-outline-primary btn-sm\" onClick={handleLink} >View</button>}\n                </div>\n            \n    </div>\n}\n","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup';\nimport { Tweet } from './detail';\n\n\nexport function TweetList(props){\n    const [ tweetsInit, setTweetsInit ] = useState([]);\n    const [ tweets, setTweets ] = useState([]);\n    const [ tweetsDidSet, setTweetsDidSet ] = useState(false);\n    // console.log(props.newTweets)\n    useEffect(() =>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if(final.length !== tweets.length){\n        setTweets(final)\n        }\n    }, [props.newTweets , tweets, tweetsInit])\n\n    useEffect(() => {\n        if(tweetsDidSet === false){\n    const handleTweetListLookup = (response, status) =>{\n        // console.log(response, status)\n        if (status === 200){\n        setTweetsInit(response)\n        setTweetsDidSet(true);\n        } else {\n            alert(\"There was an error 🤦🏼‍♀️\")\n        }\n    }\n    apiTweetList(props.username, handleTweetListLookup) // props.username must be passed as a dependecy below to fix the useEffect hook warning\n}\n    }, [tweetsInit, tweetsDidSet , setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet);\n        setTweetsInit(updateTweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets);\n        setTweets(updateFinalTweets)\n    }\n\n    return tweets.map((item, index)=>{\n    return <Tweet tweet={item} key={`${index}-{item.id}`} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark'/>\n    })\n    };","import React from 'react';\nimport { apiTweetCreate } from './lookup'\n\n\nexport function TweetCreate(props){\n    const textAreaRef = React.createRef()\n    const { didTweet } = props;\n\n    const handleBackendUpdate = (response, status) => {\n            if(status === 201){\n            didTweet(response)\n        } else {\n            console.log(response)\n            alert(\"An error occured 😢 please try again later\")\n        }\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const newVal = textAreaRef.current.value\n\n    \n        apiTweetCreate(newVal, handleBackendUpdate) \n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n                <textarea className=\"form-control\" name='tweet' required={true} ref={textAreaRef}>\n                \n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { TweetList } from './list'\nimport { TweetCreate } from './create'\nimport { apiTweetDetail } from './lookup'\nimport { Tweet } from './detail'\n\n\nexport function TweetsComponent(props){\n    const [ newTweets, setNewTweets ] = useState([]) \n\n    const canCreate = props.canCreate === \"false\" ? false : true;\n    // console.log(canCreate === true)\n    // console.log(canCreate === false)\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets];\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets) // setting the new state\n    }\n\n    return <div className={props.className}>\n        {canCreate === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />\n\n        }\n        <TweetList newTweets={newTweets} {...props} /> \n    </div>\n}\n    \n\nexport function TweetDetailComponent (props) {\n    const { tweetId } = props\n    const [didLookup, setDidLookup] = useState(false);\n    const [tweet, setTweet] = useState(null)\n\n    const handleBackendLookup = (response, status) =>{\n        if(status === 200){\n            setTweet(response)\n        } else {\n            alert(\"There was an error finding your tweet 😢 \")\n        }\n    }\n    useEffect(()=>{\n        if(didLookup === false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n\n    }, [tweetId, didLookup, setDidLookup]) \n \n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport { TweetsComponent } from './tweets'\n\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TweetsComponent, TweetDetailComponent } from './tweets';  \nimport reportWebVitals from './reportWebVitals';\n\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  appEl\n  );\n}\nconst e = React.createElement;\nconst tweetsEl = document.getElementById('pop')\nif(tweetsEl){\n  // console.log(tweetsEl.dataset)\n  ReactDOM.render(\n    // <React.StrictMode>\n    e(TweetsComponent, tweetsEl.dataset),tweetsEl\n    // </React.StrictMode>\n  );\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".pop-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container\n  )\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}